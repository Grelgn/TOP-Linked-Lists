(()=>{"use strict";class e{constructor(e){this.value=e||null,this.nextNode=null}}const t=new class{constructor(){this.head=new e}append(t){const n=new e(t);null===this.head.nextNode?(this.head.nextNode=n,this.tail=n):(this.tail.nextNode=n,this.tail=n)}prepend(t){const n=new e(t);n.nextNode=this.head.nextNode,this.head.nextNode=n}size(){let e=0,t=this.head.nextNode;for(;null!==t;)e++,t=t.nextNode;return e}getHead(){return this.head.nextNode}getTail(){return this.tail}atIndex(e){let t=0,n=this.head.nextNode;for(;null!==n;){if(t===e)return n;n=n.nextNode,t++}return null}pop(){let e=0,t=this.head.nextNode;for(;null!==t;){if(null===t.nextNode)return t=null,this.atIndex(e-1).nextNode=null,void(this.tail=this.atIndex(e-1));t=t.nextNode,e++}}contains(e){let t=this.head.nextNode;for(;null!==t;){if(t.value===e)return!0;t=t.nextNode}return!1}find(e){let t=0,n=this.head.nextNode;for(;null!==n;){if(n.value===e)return t;n=n.nextNode,t++}return null}toString(){let e="",t=this.head.nextNode;for(;null!==t;)e+=`( ${t.value} ) -> `,t=t.nextNode;return e+="null",e}};t.append("test"),t.append("test2"),t.append("test3"),t.append("test4"),t.prepend("test5"),t.prepend("test6"),console.log(t.size()),console.log(t.getHead()),console.log(t.getTail()),console.log(t.atIndex(0)),console.log(t.atIndex(2)),console.log(t.atIndex(5)),console.log(t.atIndex(7)),t.pop(),console.log(t.getTail()),console.log(t.contains("test2")),console.log(t.contains("test5")),console.log(t.contains("test4")),console.log(t.find("test2")),console.log(t.find("test5")),console.log(t.find("test4")),console.log(t.toString())})();